/**
 * THIS IS GENERATED CODE!
 * PLEASE DO NOT MODIFY - ALL YOUR WORK WOULD BE LOST!
 */
export const typescriptDeclarationFixConstant = 1;

import {UiComponent} from "../modules/UiComponent";
import {UiComponentReference} from "./UiComponentConfig";
import {TeamAppsUiComponentRegistry} from "../modules/TeamAppsUiComponentRegistry";
import {TeamAppsUiContext} from "../modules/TeamAppsUiContext";

export class CommandExecutor {
	private commandExecutorsByCommandName: {[commandName: string]: (targetObject: any, command: any) => void} = {
		    'A.nonStaticCommand': (targetObject: any, command: any) => {
				targetObject.nonStaticCommand(command.x);
			}
	};

	private staticCommandExecutorsByCommandName: {[commandName: string]: (command: any, context: TeamAppsUiContext) => void} = {
		    'A.staticCommand': (command: any, context: TeamAppsUiContext) => {
				(TeamAppsUiComponentRegistry.getComponentClassForName("A") as any).staticCommand(command.x, context);
			}
	};

	constructor(private componentRegistry: (reference: UiComponentReference) => UiComponent) {
	}

	private getComponentForReference(reference: UiComponentReference) {
		this.componentRegistry(reference);
	}

	public executeCommand(targetObject: any, command: any) {
		return this.commandExecutorsByCommandName[command._type](targetObject, command);
	}

	public executeStaticCommand(command: any, context: TeamAppsUiContext) {
		return this.staticCommandExecutorsByCommandName[command._type](command, context);
	}
}