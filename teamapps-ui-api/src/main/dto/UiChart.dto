/*-
 * ========================LICENSE_START=================================
 * TeamApps
 * ---
 * Copyright (C) 2014 - 2019 TeamApps.org
 * ---
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *      http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =========================LICENSE_END==================================
 */
class AbstractUiChart extends UiComponent {
	UiChartMargin margin = new UiChartMargin(); // not pixels! this defines the space available for tick and axis labels
	int animationDuration = 200;
	boolean showLegend = true;

	UiChartAxisConfig xAxisConfig = new UiChartAxisConfig(); // if null, no axis details are drawn
	UiChartAxisConfig yAxisConfig = new UiChartAxisConfig(); // if null, no axis details are drawn

	command uploadChartImage(UiImageType imageType);

	event chartImageUploaded(String fileItemUuId, int sizeInBytes, UiImageType imageType);
}

class UiChartAxisConfig {
	boolean drawAxisLine = true;
	String axisLabel = null;
	int axisLabelDistance = 0;
	boolean showMaxMin = true;
	String tickFormat; // see https://github.com/d3/d3-axis/blob/master/README.md#axis_tickFormat
	String[] distinctValues; //e.g. "January, February, March, ..."
}

class UiChartMargin {
	int top = 30;
	int left = 62;
	int bottom = 62;
	int right = 30;
}


class UiBasicChart extends AbstractUiChart {
	boolean useInteractiveGuideline = true;

	boolean stacked = false;

	List<UiBasicChartSeries> data;
	command setData(List<UiBasicChartSeries> data, boolean clear);
}

class UiBasicChartSeries {
    required UiBasicChartSeriesType seriesType;
    AbstractUiChartData[] values; //values - represents the array of {x,y} data points
    String key; //key  - the name of the series.
    UiColor color;  //color - optional: choose your own line color.
    UiColor secondaryColor; //e.g. for area
    UiLineChartCurveType curveType;
    boolean showDataLabels; //data labels to be displayed for each point of data in the series
    String dashStyle; //e.g. "3, 3"
    boolean shadow; //whether to apply a drop shadow to the series

}

enum UiBasicChartSeriesType {
    LINE,
    AREA,
    BAR,
    SPLINE
}

class UiPieChart extends AbstractUiChart {
	boolean useInteractiveGuideline = true;

    //...
}

class UiHeatMapChart extends AbstractUiChart {
	boolean useInteractiveGuideline = true;

    //...
}


class AbstractUiChartData {

}

class UiChartYDataPoint extends AbstractUiChartData {
	required double y;
}

class UiChartXYDataPoint extends AbstractUiChartData {
	required double x;
	required double y;
}

class UiChartNamedDataPoint extends AbstractUiChartData {
	required double y;
	required String name;
	UiColor color; //optional color
}


enum UiImageType {
    PNG,
    JPEG
}

