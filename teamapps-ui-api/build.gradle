/*
 * This file was generated by the Gradle 'init' task.
 */

dependencies {
    api "com.googlecode.json-simple:json-simple:1.1.1"
    api "com.fasterxml.jackson.core:jackson-core:$jacksonVersion"
    api "com.fasterxml.jackson.core:jackson-databind:$jacksonVersion"
    api "com.fasterxml.jackson.core:jackson-annotations:$jacksonVersion"
    api project(':teamapps-ui-dsl')
}

description = 'TeamApps UI API'

def generatedSrcDir = file("${buildDir}/generated-src")

sourceSets {
    main {
        java {
            srcDir 'src/main/java'
            srcDir generatedSrcDir
        }
    }
}

task generateUiApiJava(type:JavaExec) {
    main = "org.teamapps.dto.generate.TeamAppsJavaDtoGenerator"
    classpath = sourceSets.main.compileClasspath
            .plus(files("${project(':teamapps-ui-dsl').buildDir}/resources/main")) // TODO this is a hack. I don't know how to make gradle take :teamapps-ui-dsl's resources into account.
    args ("${projectDir}/src/main/dto", "${projectDir}/build/generated-src", "org.teamapps.dto")
}

task generateUiApiTypescript(type:JavaExec) {
    main = "org.teamapps.dto.generate.TeamAppsTypeScriptGenerator"
    classpath = sourceSets.main.compileClasspath
            .plus(files("${project(':teamapps-ui-dsl').buildDir}/resources/main")) // TODO this is a hack. I don't know how to make gradle take :teamapps-ui-dsl's resources into account.
    args ("${projectDir}/src/main/dto", "${projectDir}/../teamapps-client/ts/generated")
}


compileJava.dependsOn generateUiApiJava
compileJava.dependsOn generateUiApiTypescript