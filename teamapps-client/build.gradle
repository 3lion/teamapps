/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    id "com.moowork.node" version "1.3.1"
    id 'org.gradle.crypto.checksum' version '1.1.0'
}

import org.gradle.crypto.checksum.Checksum

sourceSets {
    main {
        resources {
            srcDirs "src/main/resources", "$buildDir/generated/resources"
        }
    }
}

dependencies {
    compile "commons-io:commons-io:$apacheCommonsIoVersion"
    compile "net.lingala.zip4j:zip4j:1.3.2"
}

description = 'TeamApps Client'


task licenseFormatForTypeScript(type: com.hierynomus.gradle.license.tasks.LicenseFormat) {
    source = fileTree(dir: project.file("ts")).include("**/*.ts?")
}
licenseFormat.dependsOn licenseFormatForTypeScript


task webpack(type: YarnTask, dependsOn: yarn_install) {
    args = ['run', 'build']

    inputs.file("package.json").withPathSensitivity(PathSensitivity.RELATIVE)
    inputs.file("yarn.lock").withPathSensitivity(PathSensitivity.RELATIVE)
    inputs.file("index.html").withPathSensitivity(PathSensitivity.RELATIVE)
    inputs.file("test-harness.html").withPathSensitivity(PathSensitivity.RELATIVE)
    inputs.dir("js-build").withPathSensitivity(PathSensitivity.RELATIVE)
    inputs.dir("ts").withPathSensitivity(PathSensitivity.RELATIVE)
    outputs.dir("dist")
    outputs.cacheIf { true }

}
webpack.dependsOn << ':teamapps-ui-api:generateUiApiTypescript'

task webappZip(type: Zip, dependsOn: webpack) {
    destinationDirectory = file("$buildDir/generated/resources")
    archiveFileName = "teamapps-client.zip"

    from "$projectDir/dist"
}

task createWebappChecksum(type: Checksum, dependsOn: webappZip) {
    files = files("$buildDir/generated/resources/teamapps-client.zip")
    outputDir = file("$buildDir/generated/resources")
    algorithm = Checksum.Algorithm.MD5
}

processResources.dependsOn << createWebappChecksum;